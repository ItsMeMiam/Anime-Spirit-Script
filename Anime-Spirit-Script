--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v87=0;local v88;while true do if (v87==0) then v88=v2(v0(v30,16));if v19 then local v120=v5(v88,v19);v19=nil;return v120;else return v88;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v89=0 -0 ;local v90;while true do if (v89==(0 -0)) then v90=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-((2569 -(1523 + 114)) -(857 + 74))) -(v32-((512 + 57) -(367 + 201)))) + (928 -(214 + 713)))) ;return v90-(v90%(1 + (1065 -(68 + 997)))) ;end end else local v91=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v91 + v91))>=v91) and 1) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + (119 -(32 + 85)) ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -((1242 -(87 + 263)) + 65)) ;return (v40 * (40022563 -23245347)) + (v39 * (121138 -55602)) + (v38 * ((649 -(67 + 113)) -(157 + 56))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=2 -1 ;local v44=(v20(v42,1 + 0 ,79 -59 ) * ((954 -(802 + (941 -(368 + 423))))^32)) + v41 ;local v45=v20(v42,(175 -119) -35 ,55 -24 );local v46=((v20(v42,24 + 8 )==(19 -(10 + 8))) and  -(998 -(915 + (315 -233)))) or 1 ;if (v45==(0 -(442 -(416 + 26)))) then if (v44==(0 + 0)) then return v46 * (0 -0) ;else v45=1188 -(1069 + 118) ;v43=0;end elseif (v45==2047) then return ((v44==(0 -0)) and (v46 * ((1 -0)/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1817 -(2534 -1740)) ) * (v43 + (v44/(2^(52 + 0)))) ;end local function v25(v47) local v48=0 + 0 ;local v49;local v50;while true do if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==(438 -(145 + 293))) then return "";end end v48=(253 + 178) -(44 + 386) ;end if ((1487 -(998 + 488))==v48) then v49=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;v48=(3 -2) + 1 ;end if (v48==(2 + 0)) then v50={};for v108=773 -(201 + 571) , #v49 do v50[v108]=v2(v1(v3(v49,v108,v108)));end v48=1141 -(116 + 1022) ;end if ((12 -(31 -22))==v48) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99,v100) local v101=(function() return 1822 -(301 + 1521) ;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v101==(0 -0)) then local v115=(function() return 0;end)();while true do if (v115==(0 + 0)) then v92=(function() return 0 -0 ;end)();v93=(function() return nil;end)();v115=(function() return 1;end)();end if (v115~=(2 -1)) then else v101=(function() return 1;end)();break;end end end if (v101~=1) then else local v116=(function() return 0;end)();while true do if (v116~=0) then else while true do if (v92==0) then v93=(function() return v94();end)();if (v95(v93, #"~", #",")==0) then local v124=(function() return 0;end)();local v125=(function() return;end)();local v126=(function() return;end)();local v127=(function() return;end)();local v128=(function() return;end)();while true do if (v124==0) then v125=(function() return 1700 -(1419 + 281) ;end)();v126=(function() return nil;end)();v124=(function() return 1 -0 ;end)();end if (v124==1) then local v164=(function() return 0;end)();local v165=(function() return;end)();while true do if (v164~=(74 -(71 + 3))) then else v165=(function() return 0 + 0 ;end)();while true do if (v165==(0 -0)) then local v224=(function() return 0 -0 ;end)();while true do if (v224~=0) then else v127=(function() return nil;end)();v128=(function() return nil;end)();v224=(function() return 1;end)();end if (v224==(242 -(187 + 54))) then v165=(function() return 781 -(162 + 618) ;end)();break;end end end if (v165~=(1 + 0)) then else v124=(function() return 2;end)();break;end end break;end end end if ((2 + 0)~=v124) then else while true do if ( #"|"==v125) then local v212=(function() return 0;end)();while true do if (v212~=1) then else v125=(function() return 3 -1 ;end)();break;end if ((0 -0)==v212) then v128=(function() return {v96(),v96(),nil,nil};end)();if (v126==0) then local v225=(function() return 0;end)();while true do if (v225==(1636 -(1373 + 263))) then v128[ #"91("]=(function() return v96();end)();v128[ #"?id="]=(function() return v96();end)();break;end end elseif (v126== #"|") then v128[ #"xnx"]=(function() return v97();end)();elseif (v126==2) then v128[ #"91("]=(function() return v97() -((1002 -(451 + 549))^(6 + 10)) ;end)();elseif (v126== #"asd") then local v232=(function() return 0 -0 ;end)();while true do if (0~=v232) then else v128[ #"xxx"]=(function() return v97() -(2^(26 -10)) ;end)();v128[ #".dev"]=(function() return v96();end)();break;end end end v212=(function() return 1385 -(746 + 638) ;end)();end end end if (v125==(1 + 1)) then local v213=(function() return 0;end)();local v214=(function() return;end)();while true do if (v213==(0 -0)) then v214=(function() return 0;end)();while true do if (v214==(341 -(218 + 123))) then if (v95(v127, #"}", #"~")~= #".") then else v128[1583 -(1535 + 46) ]=(function() return v98[v128[2]];end)();end if (v95(v127,2,2)~= #"~") then else v128[ #"asd"]=(function() return v98[v128[ #"xnx"]];end)();end v214=(function() return 1 + 0 ;end)();end if (v214==1) then v125=(function() return  #"-19";end)();break;end end break;end end end if (v125==(0 + 0)) then local v215=(function() return 560 -(306 + 254) ;end)();local v216=(function() return;end)();while true do if (0==v215) then v216=(function() return 0 + 0 ;end)();while true do if (v216==1) then v125=(function() return  #",";end)();break;end if (v216==(0 -0)) then v126=(function() return v95(v93,1469 -(899 + 568) , #"asd");end)();v127=(function() return v95(v93, #"asd1",6);end)();v216=(function() return 1;end)();end end break;end end end if (v125== #"91(") then if (v95(v127, #"19(", #"xxx")== #">") then v128[ #"0313"]=(function() return v98[v128[ #"0836"]];end)();end v99[v100]=(function() return v128;end)();break;end end break;end end end break;end end return v92,v93,v94,v95,v96,v97,v98,v99,v100;end end end end end;end)();local v52=(function() return function(v102,v103,v104) local v105=(function() return 0;end)();while true do if (v105==(0 + 0)) then local v117=(function() return 0;end)();while true do if (v117~=0) then else v102[v103-#"{" ]=(function() return v104();end)();return v102,v103,v104;end end end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v66= #"{",v57 do local v67=(function() return 0 -0 ;end)();local v68=(function() return;end)();local v69=(function() return;end)();local v70=(function() return;end)();while true do if (v67==(604 -(268 + 335))) then v70=(function() return nil;end)();while true do if (v68==(291 -(60 + 230))) then if (v69== #"]") then v70=(function() return v21()~=(572 -(426 + 146)) ;end)();elseif (v69==2) then v70=(function() return v24();end)();elseif (v69~= #"xxx") then else v70=(function() return v25();end)();end v58[v66]=(function() return v70;end)();break;end if ((0 + 0)~=v68) then else local v122=(function() return 1456 -(282 + 1174) ;end)();while true do if (v122~=(811 -(569 + 242))) then else v69=(function() return v21();end)();v70=(function() return nil;end)();v122=(function() return 2 -1 ;end)();end if (v122==(1 + 0)) then v68=(function() return 1025 -(706 + 318) ;end)();break;end end end end break;end if (v67~=(1251 -(721 + 530))) then else local v110=(function() return 0;end)();while true do if (v110==(1272 -(945 + 326))) then v67=(function() return 1;end)();break;end if (v110==(0 -0)) then v68=(function() return 0;end)();v69=(function() return nil;end)();v110=(function() return 1 + 0 ;end)();end end end end end v56[ #"xnx"]=(function() return v21();end)();for v71= #"/",v23() do FlatIdent_104D4,Descriptor,v21,v20,v22,v23,v58,v53,v71=(function() return v51(FlatIdent_104D4,Descriptor,v21,v20,v22,v23,v58,v53,v71);end)();end for v72= #"}",v23() do v54,v72,v28=(function() return v52(v54,v72,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[702 -(271 + (1117 -688)) ];local v65=v60[3 + 0 ];return function(...) local v73=v63;local v74=v64;local v75=v65;local v76=v27;local v77=1501 -(1408 + 92) ;local v78= -1;local v79={};local v80={...};local v81=v12("#",...) -(1289 -(993 + 295)) ;local v82={};local v83={};for v106=(1092 -(975 + 117)) + 0 ,v81 do if (v106>=v75) then v79[v106-v75 ]=v80[v106 + ((3047 -(157 + 1718)) -(418 + 753)) ];else v83[v106]=v80[v106 + 1 + 0 ];end end local v84=(v81-v75) + 1 + 0 ;local v85;local v86;while true do local v107=0 + 0 ;while true do if (v107==1) then if (v86<=(5 + 14)) then if (v86<=(538 -(406 + 123))) then if (v86<=(1773 -(1749 + 20))) then if (v86<=(1 + 0)) then if (v86>(1322 -(1249 + 73))) then v83[v85[1 + 0 + 1 ]]=v83[v85[3]][v85[1149 -((1654 -1188) + 679) ]];else v83[v85[2]]=v29(v74[v85[6 -(10 -7) ]],nil,v62);end elseif ((v86<=(5 -3)) or (3315<=2782)) then do return;end elseif (v86>(1903 -(106 + (2812 -(697 + 321))))) then local v171=0;local v172;while true do if (v171==(0 + (0 -0))) then v172=v85[1 + 1 ];v83[v172]=v83[v172](v13(v83,v172 + (2 -1) ,v78));break;end end else v83[v85[5 -3 ]][v85[117 -(4 + 110) ]]=v83[v85[588 -(57 + 527) ]];end elseif (v86<=(1433 -(41 + 1386))) then if (v86>(108 -(17 + 86))) then v83[v85[2 + 0 ]]=v83[v85[6 -3 ]];elseif (v85[2]==v83[v85[11 -(14 -7) ]]) then v77=v77 + (167 -(122 + 44)) ;else v77=v85[5 -2 ];end elseif (v86<=(22 -15)) then local v134=v85[2 + 0 ];v83[v134](v83[v134 + 1 ]);elseif ((v86==(2 + (13 -7))) or (876>=2964)) then v83[v85[2]]={};else v77=v85[5 -2 ];end elseif (v86<=(79 -(30 + 35))) then if ((v86<=(8 + 3)) or (2232>2497)) then if (v86>((494 + 773) -(1043 + 214))) then local v135=(0 -0) -(0 -0) ;local v136;while true do if (v135==(1212 -(323 + 889))) then v136=v85[2];v83[v136]=v83[v136](v13(v83,v136 + (2 -1) ,v78));break;end end else for v166=v85[582 -(361 + 219) ],v85[3] do v83[v166]=nil;end end elseif (v86<=((1559 -(322 + 905)) -(53 + 267))) then local v137=v85[2];v83[v137]=v83[v137](v13(v83,v137 + (612 -(602 + 9)) + (1189 -(449 + 740)) ,v85[416 -(15 + 398) ]));elseif (v86>(995 -(18 + 964))) then local v178=v85[7 -5 ];v83[v178](v13(v83,v178 + 1 + 0 ,v85[(874 -(826 + 46)) + 1 ]));else v83[v85[852 -(20 + 830) ]]=v62[v85[3 + (947 -(245 + 702)) ]];end elseif (v86<=((448 -306) -(116 + 10))) then if ((v86>(2 + 13)) or (2110<=332)) then local v139=v85[740 -(542 + 196) ];v83[v139]=v83[v139]();else local v141=0;local v142;local v143;while true do if (v141==(0 -0)) then v142=v85[1 + 1 ];v143=v83[v85[2 + 1 ]];v141=1 + 0 ;end if (v141==(1 + 0)) then v83[v142 + 1 ]=v143;v83[v142]=v143[v85[10 -6 ]];break;end end end elseif (v86<=17) then v77=v85[3];elseif ((3686>3172) and (v86>18)) then local v181=v85[2];local v182,v183=v76(v83[v181](v13(v83,v181 + (2 -1) ,v85[(3452 -(260 + 1638)) -(1126 + 425) ])));v78=(v183 + v181) -(406 -((558 -(382 + 58)) + 287)) ;local v184=0 -0 ;for v208=v181,v78 do local v209=1121 -(118 + 1003) ;while true do if ((0 -0)==v209) then v184=v184 + (378 -((455 -313) + 235)) ;v83[v208]=v182[v184];break;end end end elseif (v85[9 -7 ]==v83[v85[1 + 3 ]]) then v77=v77 + ((813 + 165) -(553 + (876 -452))) ;else v77=v85[3];end elseif (v86<=(54 -25)) then if ((v86<=24) or (4474<820)) then if ((4279>=2882) and (v86<=21)) then if (v86>(18 + (5 -3))) then v83[v85[2 + 0 ]]={};else v83[v85[2 + 0 ]][v85[3]]=v85[2 + 2 ];end elseif ((v86<=(13 + 9)) or (2029>=3521)) then do return;end elseif ((v86==(49 -26)) or (2037>=4642)) then v83[v85[5 -3 ]]=v62[v85[3]];else local v187=v85[4 -2 ];local v188=v83[v85[1 + (1207 -(902 + 303)) ]];v83[v187 + (4 -3) ]=v188;v83[v187]=v188[v85[4]];end elseif (v86<=26) then if (v86>25) then local v148=v85[3 -1 ];local v149,v150=v76(v83[v148](v13(v83,v148 + 1 ,v85[756 -((575 -336) + 514) ])));v78=(v150 + v148) -(1 + 0) ;local v151=0;for v168=v148,v78 do v151=v151 + 1 ;v83[v168]=v149[v151];end else v83[v85[2]]=v85[1332 -(797 + 46 + 486) ];end elseif ((1720<4458) and (v86<=(20 + 7))) then v83[v85[(1691 -(1121 + 569)) + 1 ]]=v83[v85[6 -3 ]][v85[1206 -(373 + 829) ]];elseif (v86>((973 -(22 + 192)) -(476 + 255))) then local v192=v85[1132 -(369 + 761) ];v83[v192](v83[v192 + 1 ]);else v83[v85[2 + 0 ]][v85[5 -(685 -(483 + 200)) ]]=v83[v85[7 -3 ]];end elseif (v86<=(272 -(64 + 174))) then if (v86<=31) then if ((v86==(5 + 25)) or (436>3021)) then if ((713<=847) and (v83[v85[2]]==v85[5 -1 ])) then v77=v77 + ((1800 -(1404 + 59)) -(144 + 192)) ;else v77=v85[(599 -380) -(42 + (233 -59)) ];end else local v156=v85[2 + 0 ];v83[v156]=v83[v156]();end elseif (v86<=(27 + 5)) then local v158=v85[(766 -(468 + 297)) + 1 ];v83[v158]=v83[v158](v13(v83,v158 + (1505 -(363 + 1141)) ,v85[565 -(334 + 228) ]));elseif (v86==(1613 -(1183 + 397))) then v83[v85[5 -(10 -7) ]]=v29(v74[v85[3 + 0 ]],nil,v62);else v83[v85[2 + 0 ]]=v83[v85[1978 -(1913 + 62) ]];end elseif ((2154<=4031) and (v86<=((53 -30) + 13))) then if (v86>(92 -57)) then v83[v85[1935 -(565 + 1368) ]]=v85[11 -8 ];elseif ((4615==4615) and (v83[v85[1663 -(1477 + 184) ]]==v85[(9 -4) -1 ])) then v77=v77 + 1 + 0 + 0 ;else v77=v85[859 -((800 -(141 + 95)) + 292) ];end elseif ((v86<=(63 -26)) or (3790==500)) then v83[v85[5 -(3 + 0) ]][v85[307 -((627 -383) + 60) ]]=v85[4 + 0 ];elseif ((89<221) and (v86==(514 -(41 + 435)))) then local v200=v85[1003 -((2254 -1316) + 63) ];v83[v200](v13(v83,v200 + 1 + 0 ,v85[1128 -(220 + 716 + 189) ]));else for v210=v85[1 + 1 ],v85[1616 -((4287 -2722) + 34 + 14) ] do v83[v210]=nil;end end v77=v77 + 1 + 0 ;break;end if ((2054>=1421) and (v107==(1138 -(408 + 374 + 356)))) then v85=v73[v77];v86=v85[1];v107=268 -(176 + 91) ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
